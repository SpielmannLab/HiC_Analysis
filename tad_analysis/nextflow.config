// set global directives

// Use dsl 2 to separate process declaration and workflow
nextflow.enable.dsl=2

//set where the intermediate files are stored
workDir = "${WORK}/call_tad_nextflow_workdir/"

// set directives
conda {
    cacheDir = "${WORK}/conda_envs_nextflow/"
    useMamba = true
    enabled = true
}

executor {
    $slurm {
        queue = "shortterm"
    }
}

process {
    // set default parameters
    errorStrategy = 'finish'
    stageInMode = 'copy'
	  publishDir = [path: "${params.outdir}/",
                mode: 'copy']
    cpus =  1
    memory = { 20.GB * task.cpus }
    executor = "slurm"
    scratch = '$SCRATCH'
    withLabel: tiny {
        executor = "local"
        cpus = 1
        memory = 1.MB
    }
    withName: perform_arrowhead {
        publishDir = [path: "${params.outdir}/arrowhead/",
                    pattern: "*.bedpe",
                    saveAs: { filename -> "${meta.samplename}_$filename" },
                    mode: 'copy']
        cpus = 4
    }
    withName: perform_diffDomain {
        conda = "/work/sreenivasan/.omics/anaconda3/envs/diffDomain"
        publishDir = [path: "${params.outdir}/diffDomain/",
                    pattern: "*.tsv",
                    pattern: "*.txt",
                    saveAs: { filename -> "${meta1.samplename}_vs_${meta2.samplename}_$filename" },
                    mode: 'copy']
        cpus = 4
    }
    withName: visualize_diffDomain {
        conda = "/work/sreenivasan/.omics/anaconda3/envs/diffDomain"
        publishDir = [path: "${params.outdir}/diffDomain_plots/",
                    saveAs: { filename -> "${meta1.samplename}_vs_${meta2.samplename}_$filename" },
                    mode: 'copy']
        cpus = 4
    }
}
