// Set a default location to circumvent warning of no initialized value
params {
    outdir = '$SCRATCH'
}

profiles {
    omics {
        //set where the intermediate files are stored
        workDir = "${WORK}/ab_compartment_workdir"

        singularity {
            enabled = true
            cacheDir = "${WORK}/singularity/"
        }

        process {
            // set default parameters
            cpus = 1
            memory = { 20.GB * task.cpus }
            executor = "slurm"
            time = 5.h
            scratch = '$SCRATCH'
            queue = "shortterm"
            stageInMode = "copy"

            withLabel: publish {
                publishDir = [path: "${params.outdir}/${params.hic_resolution}/", mode: 'copy']
            }

            withLabel: multicore {
                cpus = 10
                memory = { 10.GB * task.cpus }
            }

            withLabel: fanc {
                container = "varunkas/fanc:latest"
            }

            withName: write_params {
                cpus = 1
                memory = 128.MB
                publishDir = [
                    path: "${params.outdir}",
                    mode: 'copy',
                ]
            }

            withName: juicer_to_fanc {
                publishDir = [
                    path: "${params.outdir}/${params.hic_resolution}/original_fanc_matrices/",
                    saveAs: { filename -> "${samplename}_${filename}" },
                    mode: 'copy',
                ]
            }

            withName: fanc_downsample {
                publishDir = [
                    path: "${params.outdir}/${params.hic_resolution}/downsampled_fanc_matrices/",
                    saveAs: { filename -> "${samplename}_ds_by_${refname}_${filename}" },
                    mode: 'copy',
                ]
            }

            withName: merge_fanc {
                publishDir = [
                    path: "${params.outdir}/${params.hic_resolution}/merged_fanc_matrices/",
                    saveAs: { filename -> "${meta.merge_name}_${filename}" },
                    mode: 'copy',
                ]
            }

            withName: fanc_normalize {
                publishDir = [
                    path: "${params.outdir}/${params.hic_resolution}/normalized_fanc_matrices/",
                    saveAs: { filename -> "${norm}/${samplename}_${filename}" },
                    mode: 'copy',
                ]
            }

            withName: get_compartments {
                memory = { 30.GB * task.cpus }
                publishDir = [
                    path: "${params.outdir}/${params.hic_resolution}/compartments/",
                    saveAs: { filename -> "${norm}/${meta.samplename}_${filename}" },
                    mode: 'copy',
                ]
            }

            withName: plot_compartments {
                memory = { 5.GB * task.cpus }
                time = 2.min
                publishDir = [
                    path: "${params.outdir}/${params.hic_resolution}/compartments/",
                    saveAs: { filename -> "${norm}/${plotting_region}/${meta.samplename}_${filename}" },
                    mode: 'copy',
                ]
            }
        }
    }
}
