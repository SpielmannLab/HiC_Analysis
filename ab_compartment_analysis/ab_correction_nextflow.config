// Set a default location to circumvent warning of no initialized value
params {
    outdir = '$SCRATCH'
}

profiles {
    local {
        workDir = "/tmp/ab_correction_workdir"

        docker {
            enabled = true
            runOptions = '--platform=linux/amd64'
        }
        process {
            withLabel: fanc {
                container = "varunkas/fanc:latest"
            }
            withLabel: macs3 {
                container = "varunkas/macs3:latest"
            }
            withLabel: genomics {
                memory = 5.GB
                container = "varunkas/genomics:latest"
            }
            withName: call_peaks_on_chipseq_data_with_cutoff_analysis {
                publishDir = [
                    path: "${params.outdir}/macs3_peak_calling_cutoff_analysis/",
                    mode: 'copy',
                ]
            }
            withName: align_reference_ev_to_chip_peaks {
                publishDir = [
                    path: "${params.outdir}/ref_ev_aligned_to_chip_data/",
                    mode: 'copy',
                ]
            }
            withName: align_query_ev_and_domains_to_ref_ev {
                publishDir = [
                    path: "${params.outdir}/",
                    pattern: "*{.bed,.txt,.tmp}", // save all the files with corrected things
                    saveAs: { filename -> "${meta.samplename}_${filename}" },
                    mode: 'copy',
                ]
            }
            withName: fancplot_with_corrected_ev {
                publishDir = [
                    path: "${params.outdir}/",
                    pattern: "*.{png,tsv}",
                    saveAs: { filename -> "${plotting_region}/${meta.samplename}_${filename}" },
                    mode: 'copy',
                ]
            }
        }
    }
    omics {
        workDir = "${WORK}/ab_correction_workdir"

        singularity {
            enabled = true
            cacheDir = "${WORK}/singularity/"
        }

        process {
            // set default parameters
            cpus = 1
            memory = { 20.GB * task.cpus }
            executor = "slurm"
            time = 2.h
            scratch = '$SCRATCH'
            queue = "shortterm"
            stageInMode = "copy"
            errorStrategy = "finish"

            withLabel: publish {
                publishDir = [path: "${params.outdir}/", mode: 'copy']
            }
            withLabel: fanc {
                container = "varunkas/fanc:latest"
            }

            withLabel: macs3 {
                container = "varunkas/macs3:latest"
            }

            withLabel: genomics {
                container = "varunkas/genomics:latest"
            }

            withName: write_params {
                cpus = 1
                memory = 128.MB
                publishDir = [
                    path: "${params.outdir}",
                    mode: 'copy',
                ]
            }
            withName: call_peaks_on_chipseq_data_with_cutoff_analysis {
                publishDir = [
                    path: "${params.outdir}/macs3_peak_calling_cutoff_analysis/",
                    mode: 'copy',
                ]
            }
            withName: align_reference_ev_to_chip_peaks {
                memory = 5.GB
                publishDir = [
                    path: "${params.outdir}/ref_ev_aligned_to_chip_data/",
                    mode: 'copy',
                ]
            }
            withName: align_query_ev_and_domains_to_ref_ev {
                memory = 5.GB
                publishDir = [
                    path: "${params.outdir}/",
                    pattern: "*{.bed,.txt,.tmp}", // save all the files with corrected things
                    saveAs: { filename -> "${meta.samplename}_${filename}" },
                    mode: 'copy',
                ]
            }
            withName: enrichmentplot_with_corrected_ev {
                publishDir = [
                    path: "${params.outdir}/enrichment_plots/",
                    pattern: "*.{png,tsv}",
                    saveAs: { filename -> "${meta.samplename}_${filename}" },
                    mode: 'copy',
                ]
            }
            withName: plot_compartments_with_corrected_ev {
                memory = 10.GB
                time = 2.min
                publishDir = [
                    path: "${params.outdir}/compartment_plots/",
                    pattern: "*.{png,tsv}",
                    saveAs: { filename -> "${plotting_region}_${meta.samplename}_${filename}" },
                    mode: 'copy',
                ]
            }
        }
    }
}
