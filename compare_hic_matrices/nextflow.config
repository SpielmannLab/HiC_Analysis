//set where the intermediate files are stored
workDir = "${WORK}/compare_hic_matrices_workdir"

// Set a default location to circumvent warning of no initialized value
params {
    outdir = '$SCRATCH'
}

// set directives
// conda {
//     enabled = true
// }

singularity {
    enabled = true
    cacheDir = "${WORK}/singularity/"
}

process {
    // set default parameters
    cpus = 1
    memory = { 20.GB * task.cpus }
    executor = "slurm"
    time = 5.h
    scratch = '$SCRATCH'
    queue = "shortterm"
    stageInMode = "copy"

    withLabel: publish {
        publishDir = [path: "${params.outdir}/${params.hic_resolution}/", mode: 'copy']
    }

    withLabel: multicore {
        cpus = 10
        memory = { 10.GB * task.cpus }
    }

    withLabel: fanc {
        // conda = "/work/sreenivasan/.omics/anaconda3/envs/fanc"
        container = "varunkas/fanc:latest"
    }
    
    withName: write_params {
    cpus = 1
    memory = 128.MB
    publishDir = [ path: "${params.outdir}",
                mode: 'copy' ]
    }

    withName: juicer_to_fanc {
        publishDir = [
            path: "${params.outdir}/${params.hic_resolution}/original_fanc_matrices/",
            saveAs: { filename -> "${samplename}_${filename}" },
            mode: 'copy',
        ]
    }

    withName: fanc_downsample {
        publishDir = [
            path: "${params.outdir}/${params.hic_resolution}/downsampled_fanc_matrices/",
            saveAs: { filename -> "${samplename}_ds_by_${refname}_${filename}" },
            mode: 'copy',
        ]
    }

    withName: merge_fanc {
        publishDir = [
            path: "${params.outdir}/${params.hic_resolution}/merged_fanc_matrices/",
            saveAs: { filename -> "${meta.merge_name}_${filename}" },
            mode: 'copy',
        ]
    }

    withName: fanc_normalize {
        publishDir = [
            path: "${params.outdir}/${params.hic_resolution}/normalized_fanc_matrices/",
            saveAs: { filename -> "${norm}/${samplename}_${filename}" },
            mode: 'copy',
        ]
    }

    withName: diff_hic_matrices {
        memory = { 50.GB * task.cpus }
        publishDir = [
            path: "${params.outdir}/${params.hic_resolution}/difference/",
            saveAs: { filename -> "${norm}/${filename}" },
            mode: 'copy',
        ]
    }

    withName: foldchange_hic_matrices {
        memory = { 50.GB * task.cpus }
        publishDir = [
            path: "${params.outdir}/${params.hic_resolution}/foldchange/",
            saveAs: { filename -> "${norm}/${filename}" },
            mode: 'copy',
        ]
    }

    withName: plot_difference_matrix {
        memory = { 5.GB * task.cpus }
        time = 2.min
        publishDir = [
            path: "${params.outdir}/${params.hic_resolution}/difference/",
            saveAs: { filename -> "${norm}/${plotting_region}/${filename}" },
            mode: 'copy',
        ]
    }

    withName: plot_foldchange_matrix {
        memory = { 5.GB * task.cpus }
        time = 2.min
        publishDir = [
            path: "${params.outdir}/${params.hic_resolution}/foldchange/",
            saveAs: { filename -> "${norm}/${plotting_region}/${filename}" },
            mode: 'copy',
        ]
    }
}
